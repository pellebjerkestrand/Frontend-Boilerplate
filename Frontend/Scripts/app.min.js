//addEventListener polyfill 1.0 / Eirik Backer / MIT Licence
(function(e, t) {
    function n(e) {
        var n = t[e];
        t[e] = function(e) {
            return i(n(e));
        };
    }
    function r(t, n, r) {
        return (r = this).attachEvent("on" + t, function(t) {
            var i = t || e.event;
            i.preventDefault = i.preventDefault || function() {
                i.returnValue = !1;
            };
            i.stopPropagation = i.stopPropagation || function() {
                i.cancelBubble = !0;
            };
            n.call(r, i);
        });
    }
    function i(e, t) {
        if (e.length) {
            t = e.length;
            while (t--) e[t].addEventListener = r;
        } else e.addEventListener = r;
        return e;
    }
    if (e.addEventListener) return;
    i([ t, e ]);
    if ("Element" in e) e.Element.prototype.addEventListener = r; else {
        t.attachEvent("onreadystatechange", function() {
            i(t.all);
        });
        n("getElementsByTagName");
        n("getElementById");
        n("createElement");
        i(t.all);
    }
})(window, document);

(function(e, t) {
    "use strict";
    function o(e, t, n) {
        for (var r = 0; r < t.length; r++) t[r].addEventListener(e, n);
    }
    function u(e) {
        e.classList.remove(r.inactive);
        e.classList.add(r.active);
        return e;
    }
    function a(e) {
        e.classList.remove(r.active);
        e.classList.add(r.inactive);
        return e;
    }
    function f(e) {
        e.classList.remove(r.hidden);
        e.classList.add(r.shown);
        return e;
    }
    function l(e) {
        e.classList.remove(r.shown);
        e.classList.add(r.hidden);
        return e;
    }
    function c(e) {
        e.classList.contains(r.shown) ? l(e) : f(e);
        return e;
    }
    function h() {
        o("click", t.querySelectorAll(i.activate), function() {
            u(this.dataset[s.activate]);
        });
        o("click", t.querySelectorAll(i.deactivate), function() {
            a(this.dataset[s.deactivate]);
        });
        o("click", t.querySelectorAll(i.show), function() {
            f(this.dataset[s.show]);
        });
        o("click", t.querySelectorAll(i.hide), function() {
            l(this.dataset[s.hide]);
        });
        o("click", t.querySelectorAll(i.toggle), function() {
            l(this.dataset[s.toggle]);
        });
    }
    var n = e.app || {}, r = {
        active: "active",
        inactive: "inactive",
        shown: "shown",
        hidden: "hidden"
    }, i = {
        activate: "[data-activate]",
        deactivate: "[data-deactivate]",
        show: "[data-show]",
        hide: "[data-hide]",
        toggle: "[data-toggle]"
    }, s = {
        activate: "activate",
        deactivate: "deactivate",
        show: "show",
        hide: "hide",
        toggle: "toggle"
    };
    n.behaviors = {
        activate: function(e) {
            return u(e);
        },
        deactivate: function(e) {
            return a(e);
        },
        show: function(e) {
            return f(e);
        },
        hide: function(e) {
            return l(e);
        },
        toggle: function(e) {
            return c(e);
        },
        init: function() {
            h();
        }
    };
    e.app = n;
})(window, document);

(function(e, t) {
    "use strict";
    var n = e.app || {};
    n.init = function() {
        for (var e in n) if (n.hasOwnProperty(e)) {
            var t = n[e];
            !!t.init && typeof t.init == "function" && t.init();
        }
    };
    t.addEventListener("DOMContentLoaded", function() {
        n.init();
    });
})(window, document);